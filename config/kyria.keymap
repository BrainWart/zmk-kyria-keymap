#define DEFAULT 0
#define L_NUMS 1
#define L_TEXT 2

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

/ {
	keymap {
		compatible = "zmk,keymap";

		default_layer {
			bindings = <
	&kp TAB          &kp Q &kp W &kp E &kp R &kp T                                                                     &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSLH
	&lt L_NUMS GRAVE &kp A &kp S &kp D &kp F &kp G                                                                     &kp H &kp J  &kp K     &kp L   &kp SEMI &lt L_NUMS SQT 
	&kp LSHFT        &kp Z &kp X &kp C &kp V &kp B   &kp LALT &none                         &none          &none       &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RSHFT
	                    &mo L_TEXT &kp LGUI &kp LBKT &kp BSPC &mt LCTRL DEL                 &mt RCTRL RET  &kp SPACE &kp RBKT &kp RALT &none
			>;
		};

		nums_layer {
			bindings = <
	&kp F11   &kp F1    &kp F2    &kp F3    &kp F4    &kp F5                                              &kp F6    &kp F7    &kp F8    &kp F9    &kp F10   &kp F12
	&kp ESC   &kp N1    &kp N2    &kp N3    &kp N4    &kp N5                                              &kp N6    &kp N7    &kp N8    &kp N9    &kp N0    &trans
	&trans    &trans    &trans    &trans    &kp EQUAL &trans    &trans    &trans      &trans    &trans    &trans    &kp MINUS &trans    &trans    &trans    &trans  
	                              &trans    &trans    &trans    &trans    &trans      &trans    &trans    &trans    &trans    &trans    
			>;
		};
		
		text_layer {
			bindings = <
	&bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4    &out OUT_TOG                                              &kp HOME  &kp PG_DN &kp PG_UP &kp END   &trans    &trans  
	&trans          &trans          &trans          &trans          &trans          &trans                                                    &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT &trans    &trans  
	&bt BT_CLR      &trans          &trans          &trans          &trans          &trans          &trans    &trans      &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans  
	                                                &trans          &trans          &trans          &trans    &trans      &trans    &trans    &trans    &trans    &trans    
			>;
		};
	};
};
